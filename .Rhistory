size = 3
(size - 1) / 2
seq(-h, h)
h <- (size - 1) / 2
seq(-h, h)
rep(seq(-h, h), each = size)
dif <- rep(seq(-h, h), each = size)
matrix(dif, nrow = size, byrow = TRUE)
matrix(dif, nrow = size, byrow = FALSE)
terra::ext(c(50, 150, -10, 50))
terra::ext(c(50, 150, -10, 50)) %>%
as.points()
library(magrittr)
terra::ext(c(50, 150, -10, 50)) %>%
as.points()
library(terra)
terra::ext(c(50, 150, -10, 50)) %>%
as.points()
terra::ext(c(50, 150, -10, 50)) %>%
as.points() %>%
as.data.frame()
terra::ext(c(50, 150, -10, 50)) %>%
as.points() %>%
sf::st_as_sf() %>%
sf::st_coordinates()
terra::ext(c(50, 150, -10, 50)) %>%
as.points() %>%
terra::as.data.frame()
terra::ext(c(50, 150, -10, 50)) %>%
as.points() %>%
terra::as.matrix()
terra::ext(c(50, 150, -10, 50)) %>%
as.polygons() %>%
terra::as.matrix()
terra::ext(c(50, 150, -10, 50)) %>%
as.polygons() %>%
as.data.frame()
terra::ext(c(50, 150, -10, 50)) %>%
as.polygons() %>%
sf::st_as_sf()
tempdir
tempdir()
tempdir()
tempdir()
2:5
covars <- letters[1:10]
2:(min(5, length(covars)))
covars <- letters[1:4]
2:(min(5, length(covars)))
## Indian leopard cat
## Prionailurus bengalensis
## Distinct from Prionailurus javanensis since 2017. Remove any of these
bbox <- function(x) {
return(
terra::ext(x) %>%
as.polygons() %>%
sf::st_as_sf()
)
}
library(tidyverse)
cat_points<- readRDS("data/species_data_prionailurus_bengalensis.rds")
cat_points
plot(
cat_points$longitude,
cat_points$latitude
)
plant_points <- readRDS("data/species_data_zamia_polymorpha.rds")
plot(
plant_points$longitude,
plant_points$latitude
)
plot(
cat_points$longitude,
cat_points$latitude
)
plant_points$species
unique(
cat_points$value
)
cat_points$value
dismo::kfold(
cat_points$value, 5
)
f <- dismo::kfold(
cat_points$value, 5
)
plant_points$species
plot(
cat_points$longitude,
cat_points$latitude,
col = cat_points$value
)
cat_points$value
data.frame(a = cat_points$value, f = f)
data.frame(a = cat_points$value, f = f) %>%
group_by(f) %>%
summarise(mean(a))
data.frame(a = cat_points$value, f = f) %>%
group_by(f) %>%
summarise(sum(a))
f <- dismo::kfold(
cat_points$value, 5
)
data.frame(a = cat_points$value, f = f) %>%
group_by(f) %>%
summarise(sum(a))
plot(
cat_points$longitude,
cat_points$latitude
)
nrow(cat_points)
sum(cat_points$value)
nrow(plant_points)
sum(plant_points$value)
cat_points %>%
filter(value == 1) %>%
select(longitude, latitude) %>%
plot(col = "red")
plot(cat_points$longitude, cat_points$latitude)
cat_points %>%
filter(value == 1) %>%
select(longitude, latitude) %>%
plot(col = "red", add = TRUE)
cat_points %>%
filter(value == 1) %>%
select(longitude, latitude) %>%
points(col = "red")
plot(cat_points$longitude, cat_points$latitude)
cat_points %>%
filter(value == 1) %>%
select(longitude, latitude) %>%
points(col = "red")
line(x = 75)
abline(v = 70)
library(sf)
library(mapview)
sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4327)
sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4326)
sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4326) %>%
mapview()
sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4326) %>%
mapview()
sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4326) %>%
mapview()
library(tmap)
sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4326) %>%
tm_shape(.) +
tm_dots()
pts <- sf::st_as_sf(cat_points, coords = c("longitude", "latitude"), crs = 4326)
tm_basemap("Stamen.Watercolor") +
tm_shape(pts) +
tm_dots()
tm_basemap("Stamen.Watercolor")
tmap_mode("view")
tm_basemap("Stamen.Watercolor") +
tm_shape(pts) +
tm_dots()
tm_basemap() +
tm_shape(pts) +
tm_dots()
tmap_mode("view")
tm_basemap() +
tm_shape(pts) +
tm_dots()
tm_basemap(providers$OpenStreetMap) +
tm_shape(pts) +
tm_dots()
tm_basemap(providers$OpenStreetMap) +
tm_shape(pts[1:100, ]) +
tm_dots()
tm_shape(World)
tm_shape(World) +
tm_polygons("HPI", legend.title = "Happy Planet Index")
data("World")
tm_shape(World) +
tm_polygons("HPI")
tm_shape(World) +
tm_polygons("HPI")
tm_shape(World) +
tm_borders("white", lwd = .5) +
tm_shape(pts[1:100, ]) +
tm_dots()
tm_shape(World) +
tm_borders("white", lwd = .5)
tmap_mode("plot")
data("World")
data("World")
tm_shape(World) +
tm_borders("white", lwd = .5)
tm_shape(World) +
tm_borders("black", lwd = .5) +
tm_shape(pts[1:100, ]) +
tm_dots()
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts) +
tm_dots()
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5)
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_dots(col = "red")
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_dots(col = "red", size = 1)
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_dots(pts[pts$value == 1, ], col = "red", size = 1)
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts[pts$value == 1, ]) +
tm_dots(col = "red", size = 1)
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts[pts$value == 1, ]) +
tm_dots(col = "red", size = .3)
tm_shape(pts) +
tm_dots() +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts[pts$value == 1, ]) +
tm_dots(col = "red", size = .3, alpha = 0.5)
tm_shape(pts) +
tm_dots(size = 0.1, alpha = 0.5) +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts[pts$value == 1, ]) +
tm_dots(col = "red", size = 0.1, alpha = 0.5)
tm_shape(pts) +
tm_dots(size = 0.2, alpha = 0.5) +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts[pts$value == 1, ]) +
tm_dots(col = "red", size = 0.2, alpha = 0.5)
tm_shape(pts) +
tm_dots(size = 0.2, alpha = 0.5) +
tm_shape(World) +
tm_borders("gray", lwd = .5) +
tm_shape(pts[pts$value == 1, ]) +
tm_dots(col = "red", size = 0.2, alpha = 0.5) +
tm_line(x = 65)
World
plot(cat_points$longitude, cat_points$latitude)
plot(World$geometry, add = TRUE)
cat_points %>%
filter(value == 1) %>%
# filter(longitude > 70) %>%
select(longitude, latitude) %>%
points(col = "red")
abline(v = 70)
plot(cat_points$longitude, cat_points$latitude)
plot(World$geometry, add = TRUE)
cat_points %>%
filter(value == 1) %>%
# filter(longitude > 70) %>%
select(longitude, latitude) %>%
points(col = "red")
abline(v = 65)
abline(v = 140)
abline(v = 142)
abline(v = 141)
plot(cat_points$longitude, cat_points$latitude)
plot(World$geometry, add = TRUE)
cat_points %>%
filter(value == 1) %>%
# filter(longitude > 70) %>%
select(longitude, latitude) %>%
points(col = "red")
abline(v = 65)
abline(v = 141)
abline(v = 145)
